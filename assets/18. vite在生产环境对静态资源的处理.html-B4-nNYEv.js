import{_ as e,c as t,o as a,b as n}from"./app-CgltcQVY.js";const _={},i=n('<h1 id="vite在生产环境对静态资源的处理" tabindex="-1"><a class="header-anchor" href="#vite在生产环境对静态资源的处理"><span>vite在生产环境对静态资源的处理</span></a></h1><p>当我们将工程进行打包以后, 会发现找不到原来的资源</p><p>baseUrl: &quot;/&quot;</p><p>打包后的静态资源为什么要有hash</p><p>浏览器是有一个缓存机制 静态资源名字只要不改, 那么他就会直接用缓存的</p><p>刷新页面: 请求的名字是不是同一个 读取缓存</p><p>所以我们要尽量去避免名字一致</p><p>hash算法: 将一串字符串经过运算得到一个新的乱码字符串 全世界独一无二(uuid才是独一无二的 )</p><p>利用好hash算法 可以让我们更好的去控制浏览器的缓存机制</p><p>base64图片</p>',10),o=[i];function p(s,r){return a(),t("div",null,o)}const h=e(_,[["render",p],["__file","18. vite在生产环境对静态资源的处理.html.vue"]]),l=JSON.parse('{"path":"/frontend/vite/18.%20vite%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E5%AF%B9%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E7%9A%84%E5%A4%84%E7%90%86.html","title":"vite在生产环境对静态资源的处理","lang":"zh","frontmatter":{},"headers":[],"git":{"updatedTime":1721029030000,"contributors":[{"name":"linannan","email":"linannan@prosnav.com","commits":1}]},"filePathRelative":"frontend/vite/18. vite在生产环境对静态资源的处理.md"}');export{h as comp,l as data};
