import{_ as e,c as t,o as a,d as n}from"./app-BFPhRmaa.js";const i={},s=n(`<h1 id="【原理篇】vite是怎么让浏览器可以识别-vue文件的" tabindex="-1"><a class="header-anchor" href="#【原理篇】vite是怎么让浏览器可以识别-vue文件的"><span>【原理篇】vite是怎么让浏览器可以识别.vue文件的</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">yarn install vite</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>yarn create 实际上就等于在安装create-vite脚手架 然后使用脚手架的指令去构建项目</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">yarn create vite my-vue-app --template vue</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们来实现一套简单的vite的开发服务器</p><ol><li>解决我们刚刚的这个问题</li><li>让大家对开发服务器的原理层面有一个基础的简单的认识</li></ol><p>会涉及到node的一些知识</p><p>koa: node端的一个框架</p><p>那么我们平时去访问一个网页的时候, 我们敲下域名: baidu.com，返回百度服务器内容。</p>`,9),l=[s];function r(d,c){return a(),t("div",null,l)}const v=e(i,[["render",r],["__file","9.【原理篇】vite是怎么让浏览器可以识别.vue文件的.html.vue"]]),p=JSON.parse('{"path":"/frontend/vite/9.%E3%80%90%E5%8E%9F%E7%90%86%E7%AF%87%E3%80%91vite%E6%98%AF%E6%80%8E%E4%B9%88%E8%AE%A9%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%AF%E4%BB%A5%E8%AF%86%E5%88%AB.vue%E6%96%87%E4%BB%B6%E7%9A%84.html","title":"【原理篇】vite是怎么让浏览器可以识别.vue文件的","lang":"zh","frontmatter":{},"headers":[],"git":{"updatedTime":1721029030000,"contributors":[{"name":"linannan","email":"linannan@prosnav.com","commits":1}]},"filePathRelative":"frontend/vite/9.【原理篇】vite是怎么让浏览器可以识别.vue文件的.md"}');export{v as comp,p as data};
